{"version":3,"sources":["webpack:///webpack/bootstrap 942264cdf3efeecc96c6","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/color-picker.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/customizer-navigation.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/icon-picker.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/image.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/range-slider.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/text-editor.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/toggle.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/color-picker.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/customizer-navigation.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/icon-picker.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/image.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/range-slider.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/text-editor.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/customizer.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/extenders/typography.ts","webpack:///./assets/vendors/epsilon-framework-ts/customizer/controls/typography.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChE6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;ACTqC;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACN2B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;ACTsB;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACN4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;ACT2B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;ACPD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,eAAe,UAAU,cAAc,cAAc;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AAAA;AAAA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AAAA;AAAA;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kBAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,YAAY,kBAAkB,YAAY,aAAa,iBAAiB;AAClI;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AAAA;AAAA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AC9BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACV4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;AChB4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,UAAU,cAAc,cAAc;AACxfile":"epsilon-framework-customizer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 942264cdf3efeecc96c6","import { EpsilonColorPicker } from '../controls/color-picker';\r\nwp.customize.controlConstructor['epsilon-color-picker'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonColorPicker(control);\r\n        control.container.on('change', 'input.epsilon-color-picker', function (e) {\r\n            control.setting.set(jQuery(e.target).val());\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/color-picker.ts\n// module id = 0\n// module chunks = 0","import { EpsilonCustomizerNavigation } from '../controls/customizer-navigation';\r\nwp.customize.controlConstructor['epsilon-customizer-navigation'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonCustomizerNavigation(control);\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/customizer-navigation.ts\n// module id = 1\n// module chunks = 0","import { EpsilonIconPicker } from '../controls/icon-picker';\r\nwp.customize.controlConstructor['epsilon-icon-picker'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonIconPicker(control, false);\r\n        control.container.on('change', 'input.epsilon-icon-picker', function (event) {\r\n            control.setting.set(jQuery(event.target).val());\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/icon-picker.ts\n// module id = 2\n// module chunks = 0","import { EpsilonImage } from '../controls/image';\r\nwp.customize.controlConstructor['epsilon-image'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonImage(control);\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/image.ts\n// module id = 3\n// module chunks = 0","import { EpsilonRangeSlider } from '../controls/range-slider';\r\nwp.customize.controlConstructor['epsilon-slider'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonRangeSlider(control);\r\n        control.container.on('change', 'input.rl-slider', function (event) {\r\n            control.setting.set(jQuery(event.target).val());\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/range-slider.ts\n// module id = 4\n// module chunks = 0","import { EpsilonTextEditor } from '../controls/text-editor';\r\nwp.customize.controlConstructor['epsilon-text-editor'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonTextEditor(control);\r\n        control.container.on('change keyup', 'textarea', function (event) {\r\n            control.setting.set(jQuery(event.target).val());\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/text-editor.ts\n// module id = 5\n// module chunks = 0","wp.customize.controlConstructor['epsilon-toggle'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        control.container.on('change', 'input.onoffswitch-checkbox', function (e) {\r\n            control.setting.set(jQuery(e.target).prop('checked'));\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/toggle.ts\n// module id = 6\n// module chunks = 0","/**\r\n * Espilon Color Picker Module\r\n */\r\nexport class EpsilonColorPicker {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; setting: void; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control) {\r\n        const self = this;\r\n        let clear;\r\n        this.control = control;\r\n        this.context = jQuery(control.container).find('.epsilon-color-picker');\r\n        this.settings = {\r\n            changeDelay: 500,\r\n            theme: 'default',\r\n            change: this.changePallete,\r\n        };\r\n        if ('function' !== typeof jQuery.fn.minicolors) {\r\n            return;\r\n        }\r\n        if ('' !== this.context.attr('placeholder')) {\r\n            this.context.defaultValue = this.context.attr('placeholder');\r\n        }\r\n        if ('rgba' === this.context.attr('data-attr-mode')) {\r\n            this.context.format = 'rgb';\r\n            this.context.opacity = true;\r\n        }\r\n        this.context.minicolors(this.settings);\r\n        clear = this.context.parents('.customize-control-epsilon-color-picker').find('a');\r\n        if (!clear.length) {\r\n            clear = this.context.parents('.repeater-field-epsilon-color-picker').find('a');\r\n        }\r\n        clear.on('click', function (e) {\r\n            e.preventDefault();\r\n            self.instance = jQuery(this).parents('.customize-control-epsilon-color-picker').find('input.epsilon-color-picker');\r\n            if (!self.instance.length) {\r\n                self.instance = jQuery(this).parents('.repeater-field-epsilon-color-picker').find('input.epsilon-color-picker');\r\n            }\r\n            self.instance.minicolors('value', jQuery(this).attr('data-default'));\r\n            self.instance.trigger('change');\r\n        });\r\n    }\r\n    /**\r\n     * Real time changes to the \"pallete\"\r\n     *\r\n     * @param value\r\n     * @param opacity\r\n     */\r\n    changePallete(value, opacity) {\r\n        jQuery('.epsilon-color-scheme-selected').find('*[data-field-id=\"' + jQuery(this).attr('data-customize-setting-link') + '\"]').css('background-color', value);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/color-picker.ts\n// module id = 7\n// module chunks = 0","/**\r\n * Espilon Customizer Navigation Module\r\n */\r\nexport class EpsilonCustomizerNavigation {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control) {\r\n        this.context = jQuery(control.container);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Control initiator\r\n     */\r\n    init() {\r\n        this.context.find('.epsilon-customizer-navigation').on('click', function (e) {\r\n            e.preventDefault();\r\n            if ('undefined' !== typeof (wp.customize.section(jQuery(e.target).attr('data-customizer-section')))) {\r\n                if (jQuery(e.target).attr('data-doubled')) {\r\n                    wp.customize.section(jQuery(e.target).attr('data-customizer-section')).headContainer.trigger('click');\r\n                }\r\n                else {\r\n                    wp.customize.section(jQuery(e.target).attr('data-customizer-section')).focus();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/customizer-navigation.ts\n// module id = 8\n// module chunks = 0","/**\r\n * Espilon Icon Picker Module\r\n */\r\nexport class EpsilonIconPicker {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control, repeater) {\r\n        this.control = control;\r\n        this.context = this.control.container;\r\n        this.collection = this.context.find('.epsilon-icons > i');\r\n        this.searchInput = this.context.find('.search-container input');\r\n        this.inRepeater = repeater;\r\n        this.handleEvents();\r\n    }\r\n    /**\r\n     * Handle events\r\n     */\r\n    handleEvents() {\r\n        const self = this;\r\n        let icon, label, temp, filter;\r\n        /**\r\n         * Icon container toggler\r\n         */\r\n        this.context.on('click', '.epsilon-open-icon-picker', function (e) {\r\n            e.preventDefault();\r\n            jQuery(e.target).toggleClass('opened-icon-picker');\r\n            self.context.find('.epsilon-icon-picker-container').toggleClass('opened');\r\n        });\r\n        /**\r\n         * Icon selection\r\n         */\r\n        this.context.on('click', '.epsilon-icons-container .epsilon-icons > i', function (e) {\r\n            self.context.find('.epsilon-icons > i.selected').removeClass('selected');\r\n            icon = jQuery(e.target).addClass('selected').attr('data-icon');\r\n            label = jQuery(e.target).addClass('selected').attr('data-search');\r\n            self.context.find('.epsilon-icon-name > i').removeClass().addClass(icon);\r\n            self.context.find('.epsilon-icon-name > .icon-label').html(label);\r\n            /**\r\n             * Set value\r\n             */\r\n            if (!self.inRepeater) {\r\n                self.control.setting.set(icon);\r\n            }\r\n            else {\r\n                self.context.find('.epsilon-icon-picker').attr('value', icon).trigger('change');\r\n            }\r\n        });\r\n        /**\r\n         * Search functionality\r\n         */\r\n        self.context.on('keyup change', '.search-container input', _.debounce(function (e) {\r\n            filter = self.searchInput.val();\r\n            if ('undefined' !== typeof filter) {\r\n                filter = filter.toLowerCase();\r\n            }\r\n            jQuery.each(self.collection, function () {\r\n                temp = jQuery(this).attr('data-search');\r\n                if ('undefined' !== typeof temp) {\r\n                    temp = temp.toLowerCase();\r\n                }\r\n                jQuery(this)[temp.indexOf(filter) !== -1 ? 'show' : 'hide']();\r\n            });\r\n        }, 1000));\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/icon-picker.ts\n// module id = 9\n// module chunks = 0","/**\r\n * Epsilon Image\r\n */\r\nexport class EpsilonImage {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control) {\r\n        this.control = control;\r\n        this.context = jQuery(control.container);\r\n        this.handleEvents();\r\n    }\r\n    /**\r\n     * Event handling ( click events )\r\n     */\r\n    handleEvents() {\r\n        const self = this;\r\n        let image, temp, size, thumb, setting = { id: '', url: '' }, input = this.context.find('.epsilon-controller-image-container > input');\r\n        /**\r\n         * Image selection\r\n         */\r\n        this.context.on('click', '.image-upload-button', function (e) {\r\n            /**\r\n             * Open the wp.media frame\r\n             */\r\n            image = wp.media({\r\n                multiple: false,\r\n            }).open();\r\n            /**\r\n             * On selection, save the data in a JSON\r\n             */\r\n            image.on('select', function () {\r\n                temp = image.state().get('selection').first();\r\n                size = input.attr('data-size');\r\n                if ('undefined' === typeof (temp.toJSON().sizes[size])) {\r\n                    size = 'full';\r\n                }\r\n                setting.id = temp.id;\r\n                setting.url = temp.toJSON().sizes[size].url;\r\n                self.saveValue(setting);\r\n                self.setImage(setting.url);\r\n                /**\r\n                 * Show buttons\r\n                 */\r\n                self.context.find('.actions .image-upload-remove-button').show();\r\n                if (!_.isEmpty(self.control.params.default)) {\r\n                    self.context.find('.actions .image-default-button').show();\r\n                }\r\n            });\r\n        });\r\n        /**\r\n         * Image deletion\r\n         */\r\n        this.context.on('click', '.image-upload-remove-button', function (e) {\r\n            e.preventDefault();\r\n            thumb = self.context.find('.epsilon-image');\r\n            self.saveValue({ id: '', url: '' });\r\n            if (thumb.length) {\r\n                thumb.find('img').fadeOut(200, function () {\r\n                    thumb.removeClass('epsilon-image').addClass('placeholder').html(EpsilonTranslations.selectFile);\r\n                });\r\n            }\r\n            /**\r\n             * If we don`t have an image, we can hide these buttons\r\n             */\r\n            jQuery(e.target).hide();\r\n            if (!_.isEmpty(self.control.params.default)) {\r\n                self.context.find('.actions .image-default-button').show();\r\n            }\r\n        });\r\n        self.context.on('click', '.image-default-button', function (e) {\r\n            e.preventDefault();\r\n            thumb = self.context.find('.epsilon-image');\r\n            self.saveValue(self.control.params.default);\r\n            self.setImage(self.control.params.default.url);\r\n            self.context.find('.actions .image-upload-remove-button').show();\r\n        });\r\n    }\r\n    /**\r\n     * Set image in the customizer option control\r\n     *\r\n     * @param control\r\n     * @param image\r\n     */\r\n    setImage(image) {\r\n        /**\r\n         * If we already have an image, we need to return that div, else we grab the placeholder\r\n         *\r\n         * @type {*}\r\n         */\r\n        var thumb = this.context.find('.epsilon-image').length ? this.context.find('.epsilon-image') : this.context.find('.placeholder');\r\n        /**\r\n         * We \"reload\" the image container\r\n         */\r\n        if (thumb.length) {\r\n            thumb.removeClass('epsilon-image placeholder').addClass('epsilon-image');\r\n            thumb.html('');\r\n            thumb.append('<img style=\"display:none\" src=\"' + image + '\" />');\r\n            thumb.find('img').fadeIn(200);\r\n        }\r\n    }\r\n    /**\r\n     * Save value in database\r\n     *\r\n     * @param control\r\n     * @param val\r\n     */\r\n    saveValue(val) {\r\n        var input = this.context.find('.epsilon-controller-image-container > input');\r\n        if ('object' === typeof (val) && '' !== val.id) {\r\n            this.control.setting.set(JSON.stringify(val));\r\n            jQuery(input).attr('value', JSON.stringify(val)).trigger('change');\r\n        }\r\n        else {\r\n            this.control.setting.set('');\r\n            jQuery(input).attr('value', '').trigger('change');\r\n        }\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/image.ts\n// module id = 10\n// module chunks = 0","/// <reference types=\"jqueryui\" />\r\n/**\r\n * Espilon Range Slider Module\r\n */\r\nexport class EpsilonRangeSlider {\r\n    /**\r\n     * Class constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string; sliderControls: {min: number; max: number; step: number}}}} control\r\n     */\r\n    constructor(control) {\r\n        /**\r\n         * Minimum\r\n         * @type {number}\r\n         */\r\n        this.min = 1;\r\n        /**\r\n         * Maximum\r\n         * @type {number}\r\n         */\r\n        this.max = 20;\r\n        /**\r\n         * Step incrementor\r\n         * @type {number}\r\n         */\r\n        this.step = 1;\r\n        this.context = jQuery(control.container).hasClass('slider-container') ? jQuery(control.container) : jQuery(control.container).find('.slider-container');\r\n        this.min = control.params.sliderControls.min;\r\n        this.max = control.params.sliderControls.max;\r\n        this.step = control.params.sliderControls.step;\r\n        this.value = control.params.value;\r\n        if (!this.context) {\r\n            return;\r\n        }\r\n        this.init();\r\n    }\r\n    /**\r\n     * Initiator\r\n     */\r\n    init() {\r\n        const self = this;\r\n        let slider = this.context.find('.ss-slider'), input = this.context.find('.rl-slider'), inputId = input.attr('id'), id = slider.attr('id');\r\n        jQuery('#' + id).slider({\r\n            value: this.value,\r\n            range: 'min',\r\n            min: this.min,\r\n            max: this.max,\r\n            step: this.step,\r\n            /**\r\n             * Removed Change event because server was flooded with requests from\r\n             * javascript, sending changesets on each increment.\r\n             *\r\n             * @param event\r\n             * @param ui\r\n             */\r\n            slide: function (event, ui) {\r\n                jQuery('#' + inputId).attr('value', ui.value);\r\n            },\r\n            /**\r\n             * Bind the change event to the \"actual\" stop\r\n             * @param event\r\n             * @param ui\r\n             */\r\n            stop: function (event, ui) {\r\n                jQuery('#' + inputId).trigger('change');\r\n            }\r\n        });\r\n        jQuery(input).on('focus', function () {\r\n            jQuery(this).blur();\r\n        });\r\n        jQuery('#' + inputId).attr('value', (jQuery('#' + id).slider('value')));\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/range-slider.ts\n// module id = 11\n// module chunks = 0","/**\r\n * Espilon Text Editor Module\r\n */\r\nexport class EpsilonTextEditor {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control) {\r\n        this.context = jQuery(control.container);\r\n        this.editorId = control.params.id + '-editor';\r\n        this.init();\r\n    }\r\n    /**\r\n     * Text editor initiator\r\n     */\r\n    init() {\r\n        wp.editor.initialize(this.editorId, {\r\n            tinymce: {\r\n                wpautop: true,\r\n                setup: function (editor) {\r\n                    editor.on('change', function (e) {\r\n                        editor.save();\r\n                        jQuery(editor.getElement()).trigger('change');\r\n                    });\r\n                }\r\n            },\r\n            quicktags: true\r\n        });\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/text-editor.ts\n// module id = 12\n// module chunks = 0","/**\r\n * Controls\r\n */\r\nimport './extenders/range-slider';\r\nimport './extenders/icon-picker';\r\nimport './extenders/text-editor';\r\nimport './extenders/toggle';\r\nimport './extenders/color-picker';\r\nimport './extenders/customizer-navigation';\r\nimport './extenders/image';\r\nimport './extenders/typography';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/customizer.ts\n// module id = 13\n// module chunks = 0","import { EpsilonTypography } from '../controls/typography';\r\n/**\r\n * Epsilon Typography Control Constructor\r\n */\r\nwp.customize.controlConstructor['epsilon-typography'] = wp.customize.Control.extend({\r\n    ready: function () {\r\n        var control = this;\r\n        new EpsilonTypography(control);\r\n        /**\r\n         * Save the typography\r\n         */\r\n        control.container.on('change', '.customize-control-content > .epsilon-typography-input', function (e) {\r\n            console.log(e.target);\r\n            control.setting.set(jQuery(e.target).val());\r\n        });\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/extenders/typography.ts\n// module id = 14\n// module chunks = 0","import { EpsilonRangeSlider } from './range-slider';\r\n/**\r\n * Espilon Typography Module\r\n */\r\nexport class EpsilonTypography {\r\n    /**\r\n     * Class Constructor\r\n     * @param {{container: JQuery; params: {value: number; id: string}}} control\r\n     */\r\n    constructor(control) {\r\n        this.control = control;\r\n        this.context = jQuery(control.container);\r\n        this.container = this.context.find('.epsilon-typography-container');\r\n        this.selects = this.container.find('select');\r\n        this.inputs = this.container.find('.epsilon-typography-input');\r\n        this.sliders = this.container.find('.slider-container');\r\n        this.id = control.params.id;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Initiator\r\n     */\r\n    init() {\r\n        const self = this;\r\n        let sliderSettings;\r\n        /**\r\n         * Instantiate the selectize javascript plugin\r\n         * and the input type number\r\n         */\r\n        try {\r\n            this._selectize = this.selects.selectize();\r\n        }\r\n        catch (err) {\r\n            /**\r\n             * In case the selectize plugin is not loaded, raise an error\r\n             */\r\n            console.warn('selectize not yet loaded');\r\n        }\r\n        /**\r\n         * On clicking the advanced options toggler,\r\n         */\r\n        this.context.on('click', '.epsilon-typography-advanced > a', function (e) {\r\n            let toggle = jQuery(this).attr('data-toggle');\r\n            e.preventDefault();\r\n            jQuery(this).toggleClass('active').parent().toggleClass('active');\r\n            jQuery('#' + toggle).slideToggle().addClass('active');\r\n        });\r\n        /**\r\n         * Great use of the EpsilonFramework, ahoy!\r\n         */\r\n        jQuery.each(this.sliders, function (index, element) {\r\n            let sliderType = jQuery(element).attr('data-slider-type'), sliderSettings = {\r\n                container: element,\r\n                params: {\r\n                    value: 0,\r\n                    id: '',\r\n                    sliderControls: {\r\n                        min: 0,\r\n                        max: 10,\r\n                        step: 1\r\n                    }\r\n                }\r\n            };\r\n            switch (sliderType) {\r\n                case 'letter-spacing':\r\n                    sliderSettings.params.value = self.control.params.inputs['letter-spacing'];\r\n                    sliderSettings.params.id = self.control.params.id + '-letter-spacing';\r\n                    sliderSettings.params.sliderControls.min = 0;\r\n                    sliderSettings.params.sliderControls.max = 5;\r\n                    sliderSettings.params.sliderControls.step = 0.1;\r\n                    break;\r\n                case 'line-height':\r\n                    sliderSettings.params.value = self.control.params.inputs['line-height'];\r\n                    sliderSettings.params.id = self.control.params.id + '-line-height';\r\n                    sliderSettings.params.sliderControls.min = 0;\r\n                    sliderSettings.params.sliderControls.max = 40;\r\n                    sliderSettings.params.sliderControls.step = 1;\r\n                    break;\r\n                default:\r\n                    sliderSettings.params.value = self.control.params.inputs['font-size'];\r\n                    sliderSettings.params.id = self.control.params.id + '-font-size';\r\n                    sliderSettings.params.sliderControls.min = 0;\r\n                    sliderSettings.params.sliderControls.max = 40;\r\n                    sliderSettings.params.sliderControls.step = 1;\r\n                    break;\r\n            }\r\n            new EpsilonRangeSlider(sliderSettings);\r\n        });\r\n        this.handleEvents();\r\n    }\r\n    /**\r\n     * Handle Events\r\n     */\r\n    handleEvents() {\r\n        const self = this;\r\n        /**\r\n         * On triggering the change event, create a json with the values and\r\n         * send it to the preview window\r\n         */\r\n        this.inputs.on('change', function () {\r\n            var val = self._parseJson();\r\n            jQuery('#hidden_input_' + self.id).val(val).trigger('change');\r\n        });\r\n    }\r\n    /**\r\n     * Parse/create the json and send it to the preview window\r\n     *\r\n     * @param inputs\r\n     * @param id\r\n     * @private\r\n     */\r\n    _parseJson() {\r\n        const self = this;\r\n        var object = {\r\n            'action': 'epsilon_generate_typography_css',\r\n            'class': 'Epsilon_Typography',\r\n            'id': this.id,\r\n            'data': {\r\n                'selectors': this.control.params.selectors,\r\n                'stylesheet': this.control.params.stylesheet,\r\n                'json': {}\r\n            }\r\n        }, api = wp.customize;\r\n        jQuery.each(this.inputs, function (index, value) {\r\n            var key = jQuery(value).attr('id'), replace = self.id + '-', type = jQuery(this).attr('type');\r\n            key = key.replace(replace, '');\r\n            if ('checkbox' === type) {\r\n                object.data.json[key] = jQuery(this).prop('checked') ? jQuery(value).val() : '';\r\n            }\r\n            else {\r\n                object.data.json[key] = jQuery(value).val();\r\n            }\r\n        });\r\n        api.previewer.send('update-inline-typography-css', object);\r\n        return JSON.stringify(object.data);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/vendors/epsilon-framework-ts/customizer/controls/typography.ts\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}